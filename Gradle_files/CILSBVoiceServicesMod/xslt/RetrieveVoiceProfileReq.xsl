<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/RetrieveVoiceProfileReq.map" md5sum="b0921a4e9624832a4c460309383f12f7" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		RetrieveVoiceProfileReq.map
*   Map declaration(s):	RetrieveVoiceProfileReq
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252FCILSBVoiceServicesLib%257DVoiceProfileTransientContext/message%3D%257Bhttp%253A%252F%252FCILCommonLib%257DinvokeDownStreamRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Bhttp%253A%252F%252FCILSBVoiceServicesLib%257DVoiceProfileTransientContext/message%3D%257Bhttp%253A%252F%252FCILSBVoiceServicesLib%252FVoiceServicesIF%257DretrieveVoiceProfileRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:in2="http://CILCommonLib"
    xmlns:in3="wsdl.http://CILCommonLib"
    xmlns:io5="http://CILSBVoiceServicesLib"
    xmlns:io4="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:in="http://CILCommonLib/HeaderAdditionalInfoBO"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:out2="http://CILSBVoiceServicesLib/VoiceServicesIF"
    xmlns:out="wsdl.http://CILSBVoiceServicesLib/VoiceServicesIF"
    xmlns:map="http://CILSBVoiceServicesMod/xslt/RetrieveVoiceProfileReq"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set date exsl map xalan msl"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:RetrieveVoiceProfileReq2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:RetrieveVoiceProfileReq"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:RetrieveVoiceProfileReq">
    <io2:smo>
      <context>
        <transient>
          <xsl:attribute name="xsi:type">
            <xsl:value-of select="'io5:VoiceProfileTransientContext'"/>
          </xsl:attribute>
          <!-- a simple mapping with no associated source:  to "responseDetailString"(string) -->
          <xsl:element name="responseDetailString">
            <xsl:text></xsl:text>
          </xsl:element>
          <!-- a structural mapping with no associated source:  to "custProfileQueryResponse"(custProfileQueryResponseType) -->
          <xsl:element name="custProfileQueryResponse">
          </xsl:element>
        </transient>
      </context>
      <headers>
        <SMOHeader>
          <Target>
            <!-- a simple data mapping: "body/in2:invokeDownStream/downStreamMediationInputBO/endPoint"(string) to "address"(anyURI) -->
            <xsl:element name="address">
              <xsl:value-of select="body/in2:invokeDownStream/downStreamMediationInputBO/endPoint"/>
            </xsl:element>
          </Target>
        </SMOHeader>
      </headers>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:retrieveVoiceProfileRequestMsg'"/>
        </xsl:attribute>
        <out2:retrieveVoiceProfile>
          <!-- a structural mapping: "context/transient/customerProfileQueryRequest"(customerProfileQueryRequestType) to "customerProfileQueryRequest"(customerProfileQueryRequestType) -->
          <xsl:copy-of select="context/transient/customerProfileQueryRequest"/>
        </out2:retrieveVoiceProfile>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:RetrieveVoiceProfileReq2">
    <xsl:param name="smo"/>
    <context>
      <transient>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io5:VoiceProfileTransientContext'"/>
        </xsl:attribute>
        <!-- a simple mapping with no associated source:  to "responseDetailString"(string) -->
        <xsl:element name="responseDetailString">
          <xsl:text></xsl:text>
        </xsl:element>
        <!-- a structural mapping with no associated source:  to "custProfileQueryResponse"(custProfileQueryResponseType) -->
        <xsl:element name="custProfileQueryResponse">
        </xsl:element>
      </transient>
    </context>
    <headers>
      <SMOHeader>
        <Target>
          <!-- a simple data mapping: "$smo/body/in2:invokeDownStream/downStreamMediationInputBO/endPoint"(string) to "address"(anyURI) -->
          <xsl:element name="address">
            <xsl:value-of select="$smo/body/in2:invokeDownStream/downStreamMediationInputBO/endPoint"/>
          </xsl:element>
        </Target>
      </SMOHeader>
    </headers>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:retrieveVoiceProfileRequestMsg'"/>
      </xsl:attribute>
      <out2:retrieveVoiceProfile>
        <!-- a structural mapping: "$smo/context/transient/customerProfileQueryRequest"(customerProfileQueryRequestType) to "customerProfileQueryRequest"(customerProfileQueryRequestType) -->
        <xsl:copy-of select="$smo/context/transient/customerProfileQueryRequest"/>
      </out2:retrieveVoiceProfile>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
